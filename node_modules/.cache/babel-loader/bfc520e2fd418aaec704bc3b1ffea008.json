{"ast":null,"code":"import _slicedToArray from \"/Users/dodea247/code/sandbox/xstate-react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dodea247/code/sandbox/xstate-react-template/src/index.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMachine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar toggleMachine = createMachine({\n  id: \"toggle\",\n  initial: \"inactive\",\n  context: {\n    count: 0\n  },\n  states: {\n    inactive: {\n      on: {\n        TOGGLE: \"active\"\n      }\n    },\n    active: {\n      entry: assign({\n        count: function count(ctx) {\n          return ctx.count + 1;\n        }\n      }),\n      on: {\n        TOGGLE: \"inactive\"\n      }\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  var _useMachine = useMachine(toggleMachine),\n      _useMachine2 = _slicedToArray(_useMachine, 2),\n      current = _useMachine2[0],\n      send = _useMachine2[1];\n\n  var active = current.matches(\"active\");\n  var count = current.context.count;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"XState React Template\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fork this template!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: function onClick() {\n        return send(\"TOGGLE\");\n      },\n      children: [\"Click me (\", active ? \"✅\" : \"❌\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n      children: [\"Toggled \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hivFDqy8aBXkc2TxKDfXx/cZtwE=\", false, function () {\n  return [useMachine];\n});\n\n_c = App;\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dodea247/code/sandbox/xstate-react-template/src/index.js"],"names":["React","ReactDOM","createMachine","assign","useMachine","toggleMachine","id","initial","context","count","states","inactive","on","TOGGLE","active","entry","ctx","App","current","send","matches","rootElement","document","getElementById","render"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,EAAwBC,MAAxB,QAAsC,QAAtC;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,IAAMC,aAAa,GAAGH,aAAa,CAAC;AAClCI,EAAAA,EAAE,EAAE,QAD8B;AAElCC,EAAAA,OAAO,EAAE,UAFyB;AAGlCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AADA,GAHyB;AAMlCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AADI,KADJ;AAINC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,MAAM,CAAC;AAAEM,QAAAA,KAAK,EAAE,eAACO,GAAD;AAAA,iBAASA,GAAG,CAACP,KAAJ,GAAY,CAArB;AAAA;AAAT,OAAD,CADP;AAENG,MAAAA,EAAE,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAFE;AAJF;AAN0B,CAAD,CAAnC;;AAiBA,SAASI,GAAT,GAAe;AAAA;;AACb,oBAAwBb,UAAU,CAACC,aAAD,CAAlC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,IAAhB;;AACA,MAAML,MAAM,GAAGI,OAAO,CAACE,OAAR,CAAgB,QAAhB,CAAf;AACA,MAAQX,KAAR,GAAkBS,OAAO,CAACV,OAA1B,CAAQC,KAAR;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMU,IAAI,CAAC,QAAD,CAAV;AAAA,OAAjB;AAAA,+BACaL,MAAM,GAAG,GAAH,GAAS,GAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,EAKY,GALZ,eAME;AAAA,0CACU;AAAA,kBAASL;AAAT;AAAA;AAAA;AAAA;AAAA,cADV;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjBQQ,G;UACiBb,U;;;KADjBa,G;AAmBT,IAAMI,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAtB,QAAQ,CAACuB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBH,WAAzB","sourcesContent":["import \"./styles.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMachine, assign } from \"xstate\";\nimport { useMachine } from \"@xstate/react\";\n\nconst toggleMachine = createMachine({\n  id: \"toggle\",\n  initial: \"inactive\",\n  context: {\n    count: 0\n  },\n  states: {\n    inactive: {\n      on: { TOGGLE: \"active\" }\n    },\n    active: {\n      entry: assign({ count: (ctx) => ctx.count + 1 }),\n      on: { TOGGLE: \"inactive\" }\n    }\n  }\n});\n\nfunction App() {\n  const [current, send] = useMachine(toggleMachine);\n  const active = current.matches(\"active\");\n  const { count } = current.context;\n\n  return (\n    <div className=\"App\">\n      <h1>XState React Template</h1>\n      <h2>Fork this template!</h2>\n      <button onClick={() => send(\"TOGGLE\")}>\n        Click me ({active ? \"✅\" : \"❌\"})\n      </button>{\" \"}\n      <code>\n        Toggled <strong>{count}</strong> times\n      </code>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}